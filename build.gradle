plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    maven {
        name = "Modmuss50"
        url = "https://maven.modmuss50.me/"
        content {
            includeGroup "RebornCore"
            includeGroup "TechReborn"
            includeGroup "teamreborn"
        }
    }
    maven {
        url "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel"
            includeGroup "me.shedaniel.cloth"
            includeGroup "me.shedaniel.cloth.api"
        }
    }
    maven {
        url = "http://maven.fabricmc.net/"
        content {
            includeGroup "net.fabricmc"
        }
    }
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
        content {
            includeGroup "alexiil.mc.lib"
        }
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
        content {
            includeGroup "io.github.cottonmc"
        }
    }
    maven {
        url = "https://maven.terraformersmc.com/releases/"
        content {
            includeGroup "com.terraformersmc"
        }
    }
    maven {
        name = "Patchouli"
        url = "https://maven.blamejared.com"
        content {
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        url = "https://jitpack.io"
        content {
            includeGroup "com.github.Technici4n"
            includeGroup "com.github.GabrielOlvH"
            includeGroup "com.github.emilyploszaj"
        }
    }
    maven {
        url "https://modmaven.dev/"
        content {
            includeGroup 'appeng'
        }
    }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
        content {
            includeGroup 'grondag'
        }
    }
    maven {
        name = "Technici4n"
        url = "https://raw.githubusercontent.com/Technici4n/Technici4n-maven/master/"
        content {
            includeGroup "net.fabricmc.fabric-api" // FTL needs this too
            includeGroup "dev.technici4n"
        }
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    modApi ("dev.technici4n:FastTransferLib:${project.ftl_version}")
    include ("dev.technici4n:FastTransferLib:${project.ftl_version}")

    modImplementation("io.github.cottonmc:LibGui:${project.libgui_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }

    include("io.github.cottonmc:LibGui:${project.libgui_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }

    //modRuntime("com.terraformersmc:modmenu:${project.modmenu_version}") {
        //exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
   // }

    //modCompile("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
       // exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    //}

    modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }

    include("vazkii.patchouli:Patchouli:${project.patchouli_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }

    modImplementation("alexiil.mc.lib:libblockattributes-core:${project.lba_version}")
    modImplementation("alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}")
    modImplementation("alexiil.mc.lib:libblockattributes-items:${project.lba_version}")
    include("alexiil.mc.lib:libblockattributes-items:${project.lba_version}")
    include("alexiil.mc.lib:libblockattributes-core:${project.lba_version}")
    include("alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}")

    modApi("com.github.GabrielOlvH:magna:${project.magna_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
        exclude group: "com.jamieswhiteshirt", module: "reach-entity-attributes"
    }
    include("com.github.GabrielOlvH:magna:${project.magna_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
        exclude group: "com.jamieswhiteshirt", module: "reach-entity-attributes"
    }

    modImplementation("com.github.emilyploszaj:step-height-entity-attribute:v1.0.1") {
        transitive = false
    }
    include("com.github.emilyploszaj:step-height-entity-attribute:v1.0.1") {
        transitive = false
    }

    modApi "me.shedaniel.cloth.api:cloth-durability-bar-api-v1:${project.cloth_api_version}"
    include "me.shedaniel.cloth.api:cloth-durability-bar-api-v1:${project.cloth_api_version}"

    modImplementation ("grondag:jmx-${project.mc_tag}:${project.jmx_version}.+") { transitive = false }
    //modImplementation "curse.maven:kubejs-395864:3183435"
    //include "curse.maven:kubejs-395864:3183435"
    //modRuntime "com.github.Technici4n:KubeJS-Fabric:${project.kubejs_version}"
    //modRuntime ("appeng:appliedenergistics2-fabric:8.1.0-alpha.9") {
        //exclude group: "teamreborn", module: "energy"
    //}
    //modRuntime 'RebornCore:RebornCore-1.16:+'
    //modRuntime 'TechReborn:TechReborn-1.16:+'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"